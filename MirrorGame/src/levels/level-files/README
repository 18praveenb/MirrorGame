This is where we store the files for levels.  Rather than hardcoding every single level, we are going to take input
from a text file and use it as a template to create the level.

SYNTAX

-Everything after "#" is a comment on a single line and is there only for the purposes of human users.
-FROM means that it will take input from another level file and use that as a template; "null" makes it start from scratch.
-INCLUDE will include another file's code in a certain location.  Note, this is different from from in these ways:
  -You can have as many INCLUDE statements as you want, but only one FROM per level file, and it must be at the start.
  -FROM constructs a level from the other file first, then it will add to that what you have here.  If it has already
    constructed the previous level and remembers the java code for it, it will skip the actual loading process.  INCLUDE
    will just parse through the other file, making it good for creation of functions.
-Code written after a tab (\t from now on), will be interpreted as decribing the first line above it farther to the left
  by one tab.  If this does not exist, parsing will fail.  You can go as deep as you want with this.
-Code written after "\" will be read as belonging to the previous line.  This helps shorten code.
-DEBUG will print in the debug terminal.
-ADD "x" "y" will create an immutable game object at position (x,y) where 0,0 is the top left hand corner of the screen.
-SPAWN "x" "y" will do what add does but for characters/mutable game objects.
  (a mutable game object is one who's state can be changed after creation < during playthrough by the player; this might
  include things like levers, buttons, moving enemies, players, etcetera)
-RUN "command" AT "time" will run the given command after "time" has passed, measured in seconds.
-RUN "command" IF "condition" will run "command" if "condition" is met.
  -TAGS
    -to run it x times = "-times-x" (for IF) < if you want to only have it execute the first try
  -COMMAND SYNTAX
    -This has not been decided yet.
    -Available commands: KILL, START, ??
-

PROPER PRACTICE

-Please follow syntactic rules.
-Please create functions in the level-functions folder, and include them, don't hard code.
-Please COMMENT YOUR CODE.  At the top put the author, version, and date, and explain what this level should be.
  Don't neglect commends throughout your code either.

MISC

-This is actually based on dockerfile syntax with some modifications I made ¯\_(ツ)_/¯
-This is not implemented yet, implement it! :)
